      <input type="button" value="reload" onClick="onReloadClick()" />
      <input type="button" value="save" onClick="onSaveClick()" />
<% if logged_in? %>
  <table id="lecture-table" class="table table-striped"></table>
<script>
  function table(){
    return $('#lecture-table').DataTable();
  }
  function semester(data){
    return ((data.quarter - 1) / 2 | 0);
  }
  function lectures_per_semester(s){
    return num_semester = table().data().filter(function(e){
      return (semester(e) == s) && e.result;
    }).count();
  }
  function is_collision(data1, data2){
    return (data1.id != data2.id && data1.quarter == data2.quarter && (
           (data1.week1 == data2.week1 && data1.hour1 == data2.hour1) ||
            (data1.week1 == data2.week2 && data1.hour1 == data2.hour2) ||
            (data1.week2 && data1.hour2 && (
             (data1.week2 == data2.week1 && data1.hour2 == data2.hour1) ||
             (data1.week2 == data2.week2 && data1.hour2 == data2.hour1)))));
  }
  function onReloadClick() {
    /* FIX ME: to be ajax */
    location.reload();
  }
  function onSaveClick() {
    var data = {};
    data.lectures = [];
    table().data().each(function(e){
      if(e.result){
        data.lectures.push({id: e.id, result: e.result});
      }
    });
    $.ajax({
      type:"post",
      url:"/lectures",
      dataType: 'json',
      contentType: 'application/json',
      data: JSON.stringify(data),
      beforeSend: function(xhr) {
        xhr.setRequestHeader("X-CSRF-Token", $('meta[name="csrf-token"]').attr('content'))
      },
    }).then(
      function(data) { /* alert('success!!'); */ },
      function(data) { /* alert('error!!');  */  }
    );
  }
  function updateDOM(){
    $("tbody tr").each(function(index, elm){
      cur = table().row(this).data();
      if(cur.result){
        $(this).addClass("success");
        $(this).find(".resultbox").css("visibility","visible");
      } else {
        $(this).removeClass("success");
        $(this).find(".resultbox").css("visibility","hidden");
        dup = table().data().filter(function(e){
          return e.result && is_collision(cur, e);
        }).count();
        if(lectures_per_semester(semester(cur)) == 11 || dup > 0){
          $(this).addClass("danger");
        } else {
          $(this).removeClass("danger");
        }
      }
    });
    for(i=1; i<7;i++){
      c = "cource" + i;
      results =  table().data().filter(function(e){ return e.result >= 2 && e[c]; }).sort(function(e1,e2){return e2.result - e1.result;});
      count = results.count();
      avg = Math.round(Array.prototype.slice.call(results,0,7).reduce(function(prev, cur, i, arr) {
        return prev+cur.result;
      },0) / 7 *10)/10;
      $("th."+c).find('span').text(`${count}(${avg})`);
      if(count >= 7){
        $("th."+c).addClass("success");
        $("th."+c).removeClass("danger");
      }else{
        $("th."+c).removeClass("success");
        $("th."+c).addClass("danger");
      }
    }
  }
  data = [
    <% @lectures.each do |lecture| %>
    <%  l = lecture.lecture_period.length %>
    {
      "id":	<%= lecture[:id] %>,
      "name":   "<%= lecture[:name] %>",
      "quarter":<%= lecture[:quarter] %>,
      "week1":  <%= l != 0 ? raw('"' + lecture.lecture_period[0].week.name + '"') : "null"%>,
      "hour1":  <%= l != 0 ? lecture.lecture_period[0].period : "null"%>,
      "week2":  <%= l == 2 ? raw('"' + lecture.lecture_period[1].week.name + '"') : "null"%>,
      "hour2":  <%= l == 2 ? lecture.lecture_period[1].period : "null"%>,
      <% for i in 1..6 %>
      "cource<%= i %>": <%= lecture.cource.find(){|item| item.id == i } ? "true" : "false" %>,
      <% end %>
      "result": <%= lecture.result ? lecture.result : "null" %>
    },
    <% end %>
  ];
  $(window).on('load',function(){
      $("#lecture-table").DataTable({
        data: data,
        columnDefs: [
            {
                "render": function ( data, type, row ) {
                    return data ? "〇":"";
                },
                "targets": [8,9,10,11,12,13]
            },
            {
                "render": function ( data, type, row ) {
                    return `<input class="resultbox" style="visibility:hidden;" type="number" step="1" min="0" max="5" value="${data?data:5}" size="1"/>`;
                },
                "targets": [7]
            },

        ],
        columns: [
          { title: "#", data: 'id' },
          { title: "名称", data: 'name' },
          { title: "クォーター", data: 'quarter' },
          { title: "曜日", data: 'week1' },
          { title: "時間", data: 'hour1' },
          { title: "曜日", data: 'week2' },
          { title: "時間", data: 'hour2' },
          { title: "成績", data: 'result', className: "result" },
          { title: "ST<br/><span>0(0)</span>", data: 'cource1', className: "cource1" },
          { title: "SA<br/><span>0(0)</span>", data: 'cource2', className: "cource2" },
          { title: "PM<br/><span>0(0)</span>", data: 'cource3', className: "cource3" },
          { title: "SM<br/><span>0(0)</span>", data: 'cource4', className: "cource4" },
          { title: "TS<br/><span>0(0)</span>", data: 'cource5', className: "cource5" },
          { title: "BA<br/><span>0(0)</span>", data: 'cource6', className: "cource6" },
        ],
        paging: false
      });
      $("tbody").on("click", "td", function () {
         if(!$(this).hasClass("result")){
           tr = $(this).closest('tr')[0];
           if($(tr).hasClass("success") || ! $(tr).hasClass("danger")){
             data = table().row(tr).data();
             data.result = data.result ? null : 5;
             updateDOM();
           }
        }
      });
      $(".resultbox").change(function(){
        tr = $(this).closest('tr')[0];
        data = table().row(tr).data();
        if(parseInt($(this).val()) < 0 || parseInt($(this).val()) > 5){
          $(this).val(data.result?data.result:5);
        }else{
          data.result = parseInt($(this).val());
          updateDOM();
        }
      });
      updateDOM();
  });
</script>
<% else %>
    ログインしてね！
<% end %>
