      <input type="button" value="reload" onClick="onReloadClick()" />
      <input type="button" value="save" onClick="onSaveClick()" />
<% if logged_in? %>
  <table id="lecture-table" class="table table-striped">
    <caption>授業一覧 <%= @current_user.name %></caption>
    <thead>
      <tr>
        <th>#</th>
        <th scope="col">名称</th>
        <th scope="col">クォーター</th>
        <th scope="col">曜日</th>
        <th scope="col">時間</th>
        <th scope="col">曜日</th>
        <th scope="col">時間</th>
        <th scope="col" class="cource1" data-num="0">ST<br/><span>0</span></th>
        <th scope="col" class="cource2" data-num="0">SA<br/><span>0</span></th>
        <th scope="col" class="cource3" data-num="0">PM<br/><span>0</span></th>
        <th scope="col" class="cource4" data-num="0">SM<br/><span>0</span></th>
        <th scope="col" class="cource5" data-num="0">TS<br/><span>0</span></th>
        <th scope="col" class="cource6" data-num="0">BA<br/><span>0</span></th>
      </tr>
    </thead>
    <tbody data-1h="0" data-2h="0">
        <% @lectures.each do |lecture| %>
          <%  l = lecture.lecture_period.length %>
          <tr data-dup="0" class="<%= "initial_select" if lecture.result %>">
            <th scope="row"><%= lecture[:id] %></th>
            <td class="name"><%= lecture[:name] %></td>
            <td class="quarter"><%= lecture[:quarter] %></td>
            <td class="week week1"><%= lecture.lecture_period[0].week.name if l != 0%></td>
            <td class="hour hour1"><%= lecture.lecture_period[0].period if l != 0%></td>
            <td class="week week2"><%= lecture.lecture_period[1].week.name if l == 2%></td>
            <td class="hour hour2"><%= lecture.lecture_period[1].period if l == 2%></td>
            <% for i in 1..6 %>
              <td class="cource<%= i %>"><% lecture.cource.each do |c| if c.id == i then %>◯<% end  end %></td>
            <% end %>
          </tr>
        <% end %>
    </tbody>
  </table>
<% else %>
    ログインしてね！
<% end %>
<script>
    function getParams(row){
        idx = row.index();
        qtr = row.find(".quarter").text();
        hlf = ((qtr == "1" || qtr == "2") ? "1": "2") + "h";
        p1 = row.find(".week1").text() + row.find(".hour1").text();
        p2 = row.find(".week2").text() + row.find(".hour2").text();
        return {
            idx: idx,
            qtr: qtr,
            hlf: hlf,
            p1: p1,
            p2: p2
        };
    }
    function toggleCource(row, diff){
        for(i=1; i<7;i++){
            c = ".cource" + i;
            if(row.find(c).text() == "◯"){
                $("th"+c).data("num", $("th"+c).data("num") + diff);
                console.log($("th"+c).data("num"));
            }
            if($("th"+c).data("num") >= 7){
                $("th"+c).addClass("success");
                $("th"+c).removeClass("danger");
            }else{
                $("th"+c).removeClass("success");
                $("th"+c).addClass("danger");
            }
        }
    }
    function toggleRow(row){
        diff = row.hasClass("success") ? -1 : 1;
        sel = getParams(row);
        $("tbody").data(sel.hlf, $("tbody").data(sel.hlf) + diff);
        console.log(sel.hlf + " " + $("tbody").data(sel.hlf));
        row.toggleClass("success");
        toggleCource(row, diff);
        $("tbody tr").each(function(index, elm){
            if(index != idx){
               cur = getParams($(this));
               if(cur.qtr == sel.qtr){
                   if(sel.p1 == cur.p1 || sel.p1 == cur.p2 || (sel.p2 != "" && (sel.p2 == cur.p1 ||sel.p2 == cur.p2))){
                       $(this).data("dup", $(this).data("dup") + diff)
                   }
               }
               if(! $(this).hasClass("success")){
                   if($("tbody").data(cur.hlf) == 11 || $(this).data("dup") > 0){
                       $(this).addClass("danger");
                   } else {
                       $(this).removeClass("danger");
                   }
               }
            }
        })
    }
    function clearHdr(hdr){
        hdr.removeClass("danger");
        hdr.removeClass("success");
        hdr.data("num",0);
    }
    function clearRow(row){
        row.removeClass("danger");
        row.removeClass("success");
        row.data("dup",0);
    }
    function clearTable(){
        $("tbody").data("1h", 0);
        $("tbody").data("2h", 0);
        $("tbody tr").each(function(index, elm){
            clearRow($(this));
        });
        $("thead th").each(function(index, elm){
            clearHdr($(this));
        });
    }
    function initTable(){
        $("tbody tr").each(function(index, elm){
            if ($(this).hasClass("initial_select")){
                toggleRow($(this));
                set_row_summary(elm);
            }
        });
    }
    $("tbody").on("click", "tr", function () {
       if($(this).hasClass("success") || ! $(this).hasClass("danger")){
           toggleRow($(this));
          set_row_summary(this);
       }
    });
  function onReloadClick() {
    clearTable();
    initTable();
  }
  function onSaveClick() {
    var lectures = [];
    $("tbody tr").each(function(index, elm){
        if($(this).hasClass("success")){
            lectures.push($(this).find("th").text());
        }
    });
    $.ajax({
        type:"post",
        url:"/lectures",
        data: {lectures: lectures},
        beforeSend: function(xhr) {
          xhr.setRequestHeader("X-CSRF-Token", $('meta[name="csrf-token"]').attr('content'))
        },
    }).then(
          function(data) { /* alert('success!!'); */ },
          function(data) { /* alert('error!!');  */  }
    );
    $("tbody tr").each(function(index, elm){
        if($(this).hasClass("success")){
            $(this).addClass("initial_select");
        }else{
            $(this).removeClass("initial_select");
        }
    });
  }
  jQuery(function($){
      $("#lecture-table").DataTable({paging: false});
      initTable();
  });
</script>
